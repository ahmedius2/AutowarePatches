diff --git a/awsim_sensor_kit_launch/launch/lidar.launch.xml b/awsim_sensor_kit_launch/launch/lidar.launch.xml
index 79add12..e52954c 100644
--- a/awsim_sensor_kit_launch/launch/lidar.launch.xml
+++ b/awsim_sensor_kit_launch/launch/lidar.launch.xml
@@ -1,5 +1,5 @@
 <launch>
-  <arg name="use_concat_filter" default="true"/>
+  <arg name="use_concat_filter" default="false"/>
   <arg name="vehicle_mirror_param_file"/>
   <arg name="pointcloud_container_name" default="pointcloud_container"/>
   <arg name="use_distortion_corrector" default="true"/>
@@ -16,6 +16,7 @@
       </include>
     </group>
 
+    <!--
     <group>
       <push-ros-namespace namespace="left"/>
       <include file="$(find-pkg-share common_awsim_sensor_launch)/launch/velodyne_lidar.launch.xml">
@@ -33,6 +34,7 @@
         <arg name="container_name" value="pointcloud_container"/>
       </include>
     </group>
+    -->
 
     <include file="$(find-pkg-share awsim_sensor_kit_launch)/launch/pointcloud_preprocessor.launch.py">
       <arg name="base_frame" value="base_link"/>
diff --git a/awsim_sensor_kit_launch/launch/pointcloud_preprocessor.launch.py b/awsim_sensor_kit_launch/launch/pointcloud_preprocessor.launch.py
index 26eaa1b..d2d647d 100644
--- a/awsim_sensor_kit_launch/launch/pointcloud_preprocessor.launch.py
+++ b/awsim_sensor_kit_launch/launch/pointcloud_preprocessor.launch.py
@@ -20,6 +20,7 @@ from launch.actions import SetLaunchConfiguration
 from launch.conditions import IfCondition
 from launch.conditions import UnlessCondition
 from launch.substitutions import LaunchConfiguration
+from launch_ros.actions import Node
 from launch_ros.actions import ComposableNodeContainer
 from launch_ros.actions import LoadComposableNodes
 from launch_ros.descriptions import ComposableNode
@@ -58,7 +59,18 @@ def launch_setup(context, *args, **kwargs):
         condition=IfCondition(LaunchConfiguration("use_concat_filter")),
     )
 
-    return [concat_loader]
+    relay_node = Node(
+        package='topic_tools',
+        executable='relay',
+        name='relay_top_pointcloud',
+        parameters=[{
+            'input_topic': '/sensing/lidar/top/pointcloud',
+            'output_topic': 'concatenated/pointcloud'
+        }],
+        condition=UnlessCondition(LaunchConfiguration("use_concat_filter")),
+    )
+
+    return [concat_loader, relay_node]
 
 
 def generate_launch_description():
